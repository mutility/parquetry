# help for --help
exec parquetry --help
! stderr .
cmp stdout help

# help for -h
exec parquetry -h
! stderr .
cmp stdout help

# help for cat
exec parquetry cat --help
! stderr .
cmp stdout help.cat

# help for head
exec parquetry head --help
! stderr .
cmp stdout help.head

# help for tail
exec parquetry tail --help
! stderr .
cmp stdout help.tail

# help for schema
exec parquetry schema --help
! stderr .
cmp stdout help.schema

# help for to
exec parquetry to -h
! stderr .
cmp stdout help.to

# help for to csv
exec parquetry to csv --help
! stderr .
cmp stdout help.to

# help for reshape
exec parquetry reshape --help
! stderr .
cmp stdout help.reshape

# help on errors
! exec parquetry fnord
stderr 'parquetry: error: unexpected argument fnord'
trim stdout # errors include an extra line to separate the stderr message
cmp stdout help

! exec parquetry cat
stderr 'parquetry: error: expected "<file> ..."'
trim stdout # errors include an extra line to separate the stderr message
cmp stdout help.cat

! exec parquetry cat -
stderr 'parquetry: error: open -: no such file or directory'
trim stdout # errors include an extra line to separate the stderr message
! stdout .

! exec parquetry head
stderr 'parquetry: error: expected "<rows> <file>"'
trim stdout # errors include an extra line to separate the stderr message
cmp stdout help.head

! exec parquetry head 3
stderr 'parquetry: error: expected "<file>"'
trim stdout # errors include an extra line to separate the stderr message
cmp stdout help.head

! exec parquetry tail
stderr 'parquetry: error: expected "<rows> <file>"'
trim stdout # errors include an extra line to separate the stderr message
cmp stdout help.tail

! exec parquetry tail 3
stderr 'parquetry: error: expected "<file>"'
trim stdout # errors include an extra line to separate the stderr message
cmp stdout help.tail

! exec parquetry cat -
stderr 'parquetry: error: open -: no such file or directory'
trim stdout # errors include an extra line to separate the stderr message
! stdout .

! exec parquetry schema
stderr 'parquetry: error: expected "<file> ..."'
trim stdout # errors include an extra line to separate the stderr message
cmp stdout help.schema

! exec parquetry schema -
stderr 'parquetry: error: open -: no such file or directory'
! stdout .

! exec parquetry to
stderr 'parquetry: error: expected "<format> <file> ..."'
trim stdout # errors include an extra line to separate the stderr message
cmp stdout help.to

! exec parquetry to csv
stderr 'parquetry: error: expected "<file> ..."'
trim stdout # errors include an extra line to separate the stderr message
cmp stdout help.to

! exec parquetry to csv -
stderr 'parquetry: error: open -: no such file or directory'
! stdout .

! exec parquetry where
stderr 'parquetry: error: expected "<filter> <file> ..."'
trim stdout # errors include an extra line to separate the stderr message
cmp stdout help.where

! exec parquetry where x
stderr 'parquetry: error: expected "<file> ..."'
trim stdout # errors include an extra line to separate the stderr message
cmp stdout help.where

! exec parquetry where x -
stderr 'parquetry: error: open -: no such file or directory'
! stdout .

! exec parquetry reshape
stderr 'parquetry: error: expected "<shape> <file> ..."'
trim stdout # errors include an extra line to separate the stderr message
cmp stdout help.reshape

! exec parquetry reshape x
stderr 'parquetry: error: expected "<file> ..."'
trim stdout # errors include an extra line to separate the stderr message
cmp stdout help.reshape

! exec parquetry reshape x -
stderr 'parquetry: error: open -: no such file or directory'
! stdout .

-- help --
Usage: parquetry <command> [flags]

Tooling for parquet files

Flags:
  -h, --help    Show context-sensitive help.

Commands:
  cat        Print a parquet file
  head       Print (or skip) the beginning of a parquet file
  tail       Print (or skip) the ending of a parquet file
  schema     Print a parquet schema
  to         Convert parquet to...
  where      Filter a parquet file
  reshape    Reshape a parquet file

Run "parquetry <command> --help" for more information on a command.
-- help.cat --
Usage: parquetry cat <file> ... [flags]

Print a parquet file

Arguments:
  <file> ...    Parquet files

Flags:
  -h, --help           Show context-sensitive help.

  -f, --format="go"    Output as go, csv, json, or jsonl
      --head=n|-n      Include first n or skip first -n records
      --tail=n|-n      Include last n or skip last -n records
-- help.head --
Usage: parquetry head <rows> <file> [flags]

Print (or skip) the beginning of a parquet file

Arguments:
  <rows>    Include first n or skip first -n records
  <file>    Parquet file

Flags:
  -h, --help           Show context-sensitive help.

  -f, --format="go"    Output as go, csv, json, or jsonl
-- help.tail --
Usage: parquetry tail <rows> <file> [flags]

Print (or skip) the ending of a parquet file

Arguments:
  <rows>    Include last n or skip last -n records
  <file>    Parquet file

Flags:
  -h, --help           Show context-sensitive help.

  -f, --format="go"    Output as go, csv, json, or jsonl
-- help.schema --
Usage: parquetry schema <file> ... [flags]

Print a parquet schema

Arguments:
  <file> ...    Parquet files

Flags:
  -h, --help                Show context-sensitive help.

  -f, --format="message"    Output schema as message or logical/physical struct
-- help.to --
Usage: parquetry to <format> <file> ... [flags]

Convert parquet to...

Arguments:
  <format>      Output as go, csv, json, or jsonl
  <file> ...    Parquet files

Flags:
  -h, --help         Show context-sensitive help.

      --head=n|-n    Include first n or skip first -n records
      --tail=n|-n    Include last n or skip last -n records
-- help.reshape --
Usage: parquetry reshape <shape> <file> ... [flags]

Reshape a parquet file

Specify the desired shape as a list of fields and groups.
  - Fields are a dotted name like a.b.c specifying their source
  - Groups are a parenthesized list of fields and groups
  - Groups must, and fields may specify a name with: AS $name

For example, if the source has fields A,B,C,D,E,F,G:
  - 'A,B,C' will take the first three columns
  - 'G,F,E' will take the last three columns in reverse order
  - 'A, A AS B' will output column A with names A and B
  - '(A,C,E,G) AS Odd, (B,D,F) AS Even' will turn subsets into new groups

If the source has a group Person with fields Name and Age:
  - '(Person.Name, Person.Age) as Person' will mimic the original layout
  - 'Person.Name, Person.Age' will flatten the nested group into Name,Age

Arguments:
  <shape>       Transform into specified shape
  <file> ...    Parquet files

Flags:
  -h, --help             Show context-sensitive help.

  -f, --format="go"      Output as go, csv, json, or jsonl
  -m, --filter=STRING    Include rows matching this expression
-- help.where --
Usage: parquetry where <filter> <file> ... [flags]

Filter a parquet file

Specify the desired filter per the Flexera filter language:

Compare a dotted name to literals true/false/null, integers, dates, times,
or strings. Values must match the type of the data to which they are compared.

Comparisons include eq (equality), ne (inequality), lt (less), gt (greater),
le (less or equal), ge (greater or equal), co (contains), nc (not contains),
in (member of), ni (not member of). Group comparisons with optional (),
and tweak with a leading NOT, adjoining AND or OR.

Examples:
  - a eq true OR b eq false
  - a ne null
  - a lt 'b'
  - a le '2024-01-01T01:01:01.111Z'
  - a gt '01:01:01.111Z'
  - a ge '2024-01-01' AND a lt '2025-01-01'
  - a co 'e' AND a nc 'f'
  - a in [1, 2, 3]
  - a ni ['d', 'e', 'f']
  - NOT((a eq 1 AND b eq 2) OR (a eq 2 AND b eq 1))

Arguments:
  <filter>      Include rows matching this expression
  <file> ...    Parquet files

Flags:
  -h, --help            Show context-sensitive help.

  -f, --format="go"     Output as go, csv, json, or jsonl
  -x, --shape=STRING    Transform into specified shape
