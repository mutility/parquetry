name: "CI Tests"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-tests:
    name: "Run Tests"
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        go-version:
          - stable
          #- oldstable

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Gofmt
        run: gofmt -s -w . && git diff --exit-code

      - name: Go Vet
        run: go vet ./...

      - name: Go Tidy
        run: go mod tidy && git diff --exit-code

      - name: Go Mod
        run: go mod download

      - name: Go Mod Verify
        run: go mod verify

      - name: Go Generate
        run: go generate ./... && git diff --exit-code

      - name: Go Build
        run: go build -o /dev/null ./...

      - name: Go Test
        run: go test -v -count=1 -race -shuffle=on -coverprofile=coverage.txt ./...

      - name: Go Benchmark
        run: go test -v -shuffle=on -run=- -bench=. -benchtime=1x -benchmem ./...

      - name: Go Vulncheck
        run: go run golang.org/x/vuln/cmd/govulncheck@latest -test ./...

      - name: Lint
        uses: golangci/golangci-lint-action@v8
        with:
          args: --config=.github/golangci.yml
